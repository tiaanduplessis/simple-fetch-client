{"version":3,"file":"simple-fetch-client.js","sources":["../src/index.js"],"sourcesContent":["import tenFetch from 'tenacious-fetch'\nimport lscache from 'lscache'\nimport safeStringify from 'fast-safe-stringify'\nimport fetchResponseEnhancer from 'fetch-response-enhancer'\nimport Middleware from 'nanomiddleware'\nimport deepAssign from 'deep-assign'\n\nfunction toQueryString (obj = {}) {\n  // https://stackoverflow.com/a/34209399/7027045\n  const esc = encodeURIComponent\n  const query = Object.keys(obj)\n    .map(k => esc(k) + '=' + esc(obj[k]))\n    .join('&')\n\n  return `?${query}`\n}\n\nexport const methods = {\n  get: 'GET',\n  delete: 'DELETE',\n  head: 'HEAD',\n  options: 'OPTIONS',\n  post: 'POST',\n  put: 'POST',\n  patch: 'PATCH'\n}\n\nexport default class Client {\n  constructor (baseURL, config = {}) {\n    if (!baseURL || typeof baseURL !== 'string') {\n      throw new Error('No base URL provided')\n    }\n\n    this.baseURL = baseURL.endsWith('/') ? baseURL.slice(0, baseURL.length - 1) : baseURL\n    this.fetch = config.fetch || tenFetch\n    this.middlware = new Middleware()\n    this.delayTime = config.delay || false\n    this.cacheTime = config.cacheTime\n\n    delete config.fetch\n\n    this.config = config\n  }\n\n  delay (time = 1000) {\n    return new Promise((resolve) => {\n      setTimeout(resolve, time)\n    })\n  }\n\n  useMiddleware (fn, config = {}) {\n    this.middlware.use(fn, config)\n  }\n\n  async request (path = '', config) {\n    const url = `${this.baseURL}${path}${config.params ? toQueryString(config.params) : ''}`\n\n    const opts = deepAssign({\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }, this.config, config)\n\n    if (\n      typeof opts.body === 'object' && opts.headers['Content-Type'] === 'application/json'\n    ) {\n      opts.body = safeStringify(opts.body || {})\n    }\n\n    if (this.delayTime) {\n      await this.delay(this.delayTime)\n    }\n\n    if (opts.cache) {\n      const cachedResponse = lscache.get(url)\n      if (cachedResponse !== null) {\n        return this.middlware.run(cachedResponse)\n      }\n    }\n\n    const res = await this.fetch(url, opts)\n    const enhancedRes = await fetchResponseEnhancer(res, opts)\n    enhancedRes.url = url\n\n    if (opts.cache) {\n      lscache.set(url, enhancedRes, opts.cacheTime || this.cacheTime || 5)\n    }\n\n    return this.middlware.run(enhancedRes)\n  }\n\n  get (path, config = {}) {\n    return this.request(path, deepAssign(config, { method: methods.get }))\n  }\n\n  delete (path, config = {}) {\n    return this.request(\n      path,\n      deepAssign(config, { method: methods.delete })\n    )\n  }\n\n  head (path, config = {}) {\n    return this.request(\n      path,\n      deepAssign(config, { method: methods.delete })\n    )\n  }\n\n  options (path, config = {}) {\n    return this.request(\n      path,\n      deepAssign(config, { method: methods.options })\n    )\n  }\n\n  post (path, config = {}) {\n    return this.request(path, deepAssign(config, { method: methods.post }))\n  }\n\n  put (path, config = {}) {\n    return this.request(path, deepAssign(config, { method: methods.put }))\n  }\n\n  patch (path, config = {}) {\n    return this.request(path, deepAssign(config, { method: methods.patch }))\n  }\n}\n"],"names":["methods","get","delete","head","options","post","put","patch","Client","constructor","baseURL","config","Error","endsWith","slice","length","fetch","tenFetch","middlware","Middleware","delayTime","delay","cacheTime","time","Promise","resolve","setTimeout","useMiddleware","fn","use","request","path","this","opts","cache","cachedResponse","lscache","url","_this","run","res","fetchResponseEnhancer","enhancedRes","set","params","obj","esc","encodeURIComponent","Object","keys","map","k","join","toQueryString","deepAssign","headers","body","safeStringify","method"],"mappings":"yQAiBA,IAAaA,EAAU,CACrBC,IAAK,MACLC,OAAQ,SACRC,KAAM,OACNC,QAAS,UACTC,KAAM,OACNC,IAAK,OACLC,MAAO,SAGYC,EACnBC,SAAaC,EAASC,qBAAS,KACxBD,GAA8B,iBAAZA,QACf,IAAIE,MAAM,6BAGbF,QAAUA,EAAQG,SAAS,KAAOH,EAAQI,MAAM,EAAGJ,EAAQK,OAAS,GAAKL,OACzEM,MAAQL,EAAOK,OAASC,OACxBC,UAAY,IAAIC,OAChBC,UAAYT,EAAOU,QAAS,OAC5BC,UAAYX,EAAOW,iBAEjBX,EAAOK,WAETL,OAASA,GAGhBU,YAAAA,eAAOE,yBAAO,KACL,IAAIC,iBAASC,GAClBC,WAAWD,EAASF,MAIxBI,YAAAA,uBAAeC,EAAIjB,kBAAS,SACrBO,UAAUW,IAAID,EAAIjB,IAGnBmB,YAAAA,iBAASC,EAAWpB,kBAAJ,cACLqB,qBAmBXC,EAAKC,MAAO,KACRC,EAAiBC,EAAQnC,IAAIoC,MACZ,OAAnBF,SACKG,EAAKpB,UAAUqB,IAAIJ,0BAIZG,EAAKtB,MAAMqB,EAAKJ,kBAA5BO,0BACoBC,EAAsBD,EAAKP,kBAA/CS,UACNA,EAAYL,IAAMA,EAEdJ,EAAKC,OACPE,EAAQO,IAAIN,EAAKK,EAAaT,EAAKX,WAAagB,EAAKhB,WAAa,GAG7DgB,EAAKpB,UAAUqB,IAAIG,WAlCpBL,EAAO,GAAEC,EAAa,QAAEP,GAAOpB,EAAOiC,OAhDhD,SAAwBC,kBAAM,QAEtBC,EAAMC,6BACEC,OAAOC,KAAKJ,GACvBK,aAAIC,UAAKL,EAAIK,GAAK,IAAML,EAAID,EAAIM,MAChCC,KAAK,KA2C+CC,CAAc1C,EAAOiC,QAAU,IAE9EX,EAAOqB,EAAW,CACtBC,QAAS,QACG,kCACM,qBAEjBjB,EAAK3B,OAAQA,GAGO,iBAAdsB,EAAKuB,MAAsD,qBAAjCvB,EAAKsB,QAAQ,kBAE9CtB,EAAKuB,KAAOC,EAAcxB,EAAKuB,MAAQ,yBAGrClB,EAAKlB,iCACDkB,EAAKjB,MAAMiB,EAAKlB,qGAqB1BnB,YAAAA,aAAK8B,EAAMpB,yBAAS,IACXqB,KAAKF,QAAQC,EAAMuB,EAAW3C,EAAQ,CAAE+C,OAAQ1D,EAAQC,QAGjEC,YAAAA,gBAAQ6B,EAAMpB,yBAAS,IACdqB,KAAKF,QACVC,EACAuB,EAAW3C,EAAQ,CAAE+C,OAAQ1D,EAAQE,WAIzCC,YAAAA,cAAM4B,EAAMpB,yBAAS,IACZqB,KAAKF,QACVC,EACAuB,EAAW3C,EAAQ,CAAE+C,OAAQ1D,EAAQE,WAIzCE,YAAAA,iBAAS2B,EAAMpB,yBAAS,IACfqB,KAAKF,QACVC,EACAuB,EAAW3C,EAAQ,CAAE+C,OAAQ1D,EAAQI,YAIzCC,YAAAA,cAAM0B,EAAMpB,yBAAS,IACZqB,KAAKF,QAAQC,EAAMuB,EAAW3C,EAAQ,CAAE+C,OAAQ1D,EAAQK,SAGjEC,YAAAA,aAAKyB,EAAMpB,yBAAS,IACXqB,KAAKF,QAAQC,EAAMuB,EAAW3C,EAAQ,CAAE+C,OAAQ1D,EAAQM,QAGjEC,YAAAA,eAAOwB,EAAMpB,yBAAS,IACbqB,KAAKF,QAAQC,EAAMuB,EAAW3C,EAAQ,CAAE+C,OAAQ1D,EAAQO"}